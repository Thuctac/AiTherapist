# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SendUserIdBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, text: str=None, audio: str=None, image: str=None):  # noqa: E501
        """SendUserIdBody - a model defined in Swagger

        :param text: The text of this SendUserIdBody.  # noqa: E501
        :type text: str
        :param audio: The audio of this SendUserIdBody.  # noqa: E501
        :type audio: str
        :param image: The image of this SendUserIdBody.  # noqa: E501
        :type image: str
        """
        self.swagger_types = {
            'text': str,
            'audio': str,
            'image': str
        }

        self.attribute_map = {
            'text': 'text',
            'audio': 'audio',
            'image': 'image'
        }
        self._text = text
        self._audio = audio
        self._image = image

    @classmethod
    def from_dict(cls, dikt) -> 'SendUserIdBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The send_userId_body of this SendUserIdBody.  # noqa: E501
        :rtype: SendUserIdBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def text(self) -> str:
        """Gets the text of this SendUserIdBody.

        Text content of the message  # noqa: E501

        :return: The text of this SendUserIdBody.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this SendUserIdBody.

        Text content of the message  # noqa: E501

        :param text: The text of this SendUserIdBody.
        :type text: str
        """

        self._text = text

    @property
    def audio(self) -> str:
        """Gets the audio of this SendUserIdBody.

        Audio file attachment (webm/ogg)  # noqa: E501

        :return: The audio of this SendUserIdBody.
        :rtype: str
        """
        return self._audio

    @audio.setter
    def audio(self, audio: str):
        """Sets the audio of this SendUserIdBody.

        Audio file attachment (webm/ogg)  # noqa: E501

        :param audio: The audio of this SendUserIdBody.
        :type audio: str
        """

        self._audio = audio

    @property
    def image(self) -> str:
        """Gets the image of this SendUserIdBody.

        Optional image file attachment  # noqa: E501

        :return: The image of this SendUserIdBody.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image: str):
        """Sets the image of this SendUserIdBody.

        Optional image file attachment  # noqa: E501

        :param image: The image of this SendUserIdBody.
        :type image: str
        """

        self._image = image
