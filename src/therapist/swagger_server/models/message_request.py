# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MessageRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, user_id: str=None, conversation_id: str=None, timestamp: datetime=None, text: str=None, voice: str=None, image: str=None):  # noqa: E501
        """MessageRequest - a model defined in Swagger

        :param user_id: The user_id of this MessageRequest.  # noqa: E501
        :type user_id: str
        :param conversation_id: The conversation_id of this MessageRequest.  # noqa: E501
        :type conversation_id: str
        :param timestamp: The timestamp of this MessageRequest.  # noqa: E501
        :type timestamp: datetime
        :param text: The text of this MessageRequest.  # noqa: E501
        :type text: str
        :param voice: The voice of this MessageRequest.  # noqa: E501
        :type voice: str
        :param image: The image of this MessageRequest.  # noqa: E501
        :type image: str
        """
        self.swagger_types = {
            'user_id': str,
            'conversation_id': str,
            'timestamp': datetime,
            'text': str,
            'voice': str,
            'image': str
        }

        self.attribute_map = {
            'user_id': 'userId',
            'conversation_id': 'conversationId',
            'timestamp': 'timestamp',
            'text': 'text',
            'voice': 'voice',
            'image': 'image'
        }
        self._user_id = user_id
        self._conversation_id = conversation_id
        self._timestamp = timestamp
        self._text = text
        self._voice = voice
        self._image = image

    @classmethod
    def from_dict(cls, dikt) -> 'MessageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MessageRequest of this MessageRequest.  # noqa: E501
        :rtype: MessageRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self) -> str:
        """Gets the user_id of this MessageRequest.

        Unique identifier of the user  # noqa: E501

        :return: The user_id of this MessageRequest.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this MessageRequest.

        Unique identifier of the user  # noqa: E501

        :param user_id: The user_id of this MessageRequest.
        :type user_id: str
        """
        if user_id is None:
            raise ValueError("Invalid value for `user_id`, must not be `None`")  # noqa: E501

        self._user_id = user_id

    @property
    def conversation_id(self) -> str:
        """Gets the conversation_id of this MessageRequest.

        Unique identifier of the conversation  # noqa: E501

        :return: The conversation_id of this MessageRequest.
        :rtype: str
        """
        return self._conversation_id

    @conversation_id.setter
    def conversation_id(self, conversation_id: str):
        """Sets the conversation_id of this MessageRequest.

        Unique identifier of the conversation  # noqa: E501

        :param conversation_id: The conversation_id of this MessageRequest.
        :type conversation_id: str
        """
        if conversation_id is None:
            raise ValueError("Invalid value for `conversation_id`, must not be `None`")  # noqa: E501

        self._conversation_id = conversation_id

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this MessageRequest.

        ISO-8601 timestamp of when the message was sent  # noqa: E501

        :return: The timestamp of this MessageRequest.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this MessageRequest.

        ISO-8601 timestamp of when the message was sent  # noqa: E501

        :param timestamp: The timestamp of this MessageRequest.
        :type timestamp: datetime
        """
        if timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")  # noqa: E501

        self._timestamp = timestamp

    @property
    def text(self) -> str:
        """Gets the text of this MessageRequest.

        Plain text message  # noqa: E501

        :return: The text of this MessageRequest.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text: str):
        """Sets the text of this MessageRequest.

        Plain text message  # noqa: E501

        :param text: The text of this MessageRequest.
        :type text: str
        """

        self._text = text

    @property
    def voice(self) -> str:
        """Gets the voice of this MessageRequest.

        Audio file (e.g., WAV or MP3)  # noqa: E501

        :return: The voice of this MessageRequest.
        :rtype: str
        """
        return self._voice

    @voice.setter
    def voice(self, voice: str):
        """Sets the voice of this MessageRequest.

        Audio file (e.g., WAV or MP3)  # noqa: E501

        :param voice: The voice of this MessageRequest.
        :type voice: str
        """

        self._voice = voice

    @property
    def image(self) -> str:
        """Gets the image of this MessageRequest.

        Image file (e.g., JPEG or PNG)  # noqa: E501

        :return: The image of this MessageRequest.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image: str):
        """Sets the image of this MessageRequest.

        Image file (e.g., JPEG or PNG)  # noqa: E501

        :param image: The image of this MessageRequest.
        :type image: str
        """

        self._image = image
