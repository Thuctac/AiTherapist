openapi: 3.0.0
info:
  title: Chat API
  description: "Swagger/OpenAPI specification for Chat and Auth endpoints (text, audio,\
    \ image)"
  version: 1.0.0
servers:
- url: /
paths:
  /auth/check:
    get:
      tags:
      - Auth
      summary: Check authentication status
      operationId: auth_check_get
      responses:
        "200":
          description: Authenticated user info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        "401":
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-openapi-router-controller: swagger_server.controllers.auth_controller
  /auth/signup:
    post:
      tags:
      - Auth
      summary: Sign up a new user
      operationId: auth_signup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupRequest"
        required: true
      responses:
        "201":
          description: User created and authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-openapi-router-controller: swagger_server.controllers.auth_controller
  /auth/login:
    post:
      tags:
      - Auth
      summary: Log in existing user
      operationId: auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthUser"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-openapi-router-controller: swagger_server.controllers.auth_controller
  /auth/logout:
    post:
      tags:
      - Auth
      summary: Log out current user
      operationId: auth_logout_post
      responses:
        "204":
          description: Logged out successfully
        "401":
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-openapi-router-controller: swagger_server.controllers.auth_controller
  /messages/{userId}:
    get:
      tags:
      - Messages
      summary: "Get chat messages for a user (text, audio, image)"
      operationId: messages_user_id_get
      parameters:
      - name: userId
        in: path
        description: ID of the user to fetch messages for
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: List of messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"
                x-content-type: application/json
        "401":
          description: Not authenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-openapi-router-controller: swagger_server.controllers.messages_controller
  /messages/send/{userId}:
    post:
      tags:
      - Messages
      summary: "Send a message to the bot (text, audio, optional image)"
      description: "A valid request must include **at least one** of the three fields:\
        \ `text`, `audio`, or `image`."
      operationId: messages_send_user_id_post
      parameters:
      - name: userId
        in: path
        description: ID of the sending user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/send_userId_body"
        required: true
      responses:
        "201":
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-openapi-router-controller: swagger_server.controllers.messages_controller
components:
  schemas:
    AuthUser:
      required:
      - _id
      - email
      - token
      - username
      type: object
      properties:
        _id:
          type: string
        username:
          type: string
        email:
          type: string
        token:
          type: string
        profilePic:
          type: string
          description: URL of user's profile picture
      example:
        profilePic: profilePic
        _id: _id
        email: email
        username: username
        token: token
    SignupRequest:
      required:
      - email
      - password
      - username
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
    LoginRequest:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    Message:
      required:
      - _id
      - audio
      - createdAt
      - senderId
      - text
      type: object
      properties:
        _id:
          type: string
        senderId:
          type: string
        conversationId:
          type: string
        text:
          type: string
        audio:
          type: string
          description: URL of audio attachment
        imageUrl:
          type: string
          description: URL of image attachment (user messages only)
        createdAt:
          type: string
          format: date-time
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        senderId: senderId
        conversationId: conversationId
        imageUrl: imageUrl
        _id: _id
        text: text
        audio: audio
    ErrorResponse:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    send_userId_body:
      type: object
      properties:
        text:
          type: string
          description: Text content of the message
        audio:
          type: string
          description: Audio file attachment (webm/ogg)
          format: binary
        image:
          type: string
          description: Optional image file attachment
          format: binary
      anyOf:
      - required:
        - text
      - required:
        - audio
      - required:
        - image

