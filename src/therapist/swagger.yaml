openapi: 3.0.0
info:
  title: AITherapist API
  version: 1.0.0
  description: |
    REST API for sending user messages (text, voice, image) to the AITherapist back end
    and receiving an AI-generated text+audio reply asynchronously.
servers:
  - url: http://localhost:5000/api
    description: Local development server

paths:
  /messages:
    post:
      summary: Submit a new user message for AI processing
      description: |
        Send a message with at least one modality (text, voice, image).
        Returns immediately with a messageId to poll for the result.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MessageRequest"
      responses:
        "202":
          description: Accepted for processing
          headers:
            Location:
              description: URL to poll for the processing result
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  messageId:
                    type: string
                    description: Identifier for polling the result

  /messages/{messageId}:
    get:
      summary: Poll the status or result of a previously submitted message
      parameters:
        - in: path
          name: messageId
          required: true
          schema:
            type: string
          description: ID returned by POST /messages
      responses:
        "200":
          description: Current processing state or final result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageStatus"

  /conversations/{conversationId}/messages:
    get:
      summary: List all stored messages in a conversation
      parameters:
        - in: path
          name: conversationId
          required: true
          schema:
            type: string
          description: Unique identifier of the conversation
      responses:
        "200":
          description: Array of all messages in the conversation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StoredMessage"

components:
  schemas:
    MessageRequest:
      type: object
      description: |
        At least one of `text`, `voice`, or `image` must be provided.
      properties:
        userId:
          type: string
          description: Unique identifier of the user
        conversationId:
          type: string
          description: Unique identifier of the conversation
        timestamp:
          type: string
          format: date-time
          description: ISO-8601 timestamp of when the message was sent
        text:
          type: string
          description: Plain text message
        voice:
          type: string
          format: binary
          description: Audio file (e.g., WAV or MP3)
        image:
          type: string
          format: binary
          description: Image file (e.g., JPEG or PNG)
      required:
        - userId
        - conversationId
        - timestamp

    MessageStatus:
      type: object
      description: Status or result of an asynchronous message processing request
      properties:
        messageId:
          type: string
          description: Identifier of the processed message
        state:
          type: string
          enum:
            - processing
            - done
          description: Current processing state
        responseText:
          type: string
          nullable: true
          description: AI-generated response text (only when `state` is `done`)
        responseAudio:
          type: string
          format: byte
          nullable: true
          description: Base64-encoded AI response audio (only when `state` is `done`)
      required:
        - messageId
        - state

    StoredMessage:
      type: object
      description: A message (user or bot) stored in a conversation history
      properties:
        messageId:
          type: string
          description: Unique message identifier
        userId:
          type: string
          description: ID of the user who sent (or received) the message
        conversationId:
          type: string
          description: ID of the conversation
        timestamp:
          type: string
          format: date-time
          description: When the message was sent
        text:
          type: string
          nullable: true
          description: Text content, if any
        voiceUrl:
          type: string
          format: uri
          nullable: true
          description: Public URL to the stored audio file
        imageUrl:
          type: string
          format: uri
          nullable: true
          description: Public URL to the stored image file
        direction:
          type: string
          enum:
            - user
            - bot
          description: Indicates whether the message was sent by the user or generated by the bot
      required:
        - messageId
        - userId
        - conversationId
        - timestamp
        - direction
